- name: disable default nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs 20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs and mysql
  ansible.builtin.package:
    name: "{{ item }}"
    state: present    
  loop:
  - nodejs
  - mysql  

- name: create user
  ansible.builtin.user:
    name: expense   

- name: create app directory
  ansible.builtin.file:
    path: /app
    state: directory  

- name: download app code
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip     

- name: unzip the app code
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app 
    remote_src: yes

- name: install dependencies
  community.general.npm:
    path: /app

- name: copy backend service
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service 

- name: install python libraries
  ansible.builtin.pip:
    name: "{{item}}"
    executable: pip3.9
  loop:
  - PyMySQL 
  - cryptography     

- name: import mysql data
  community.mysql.mysql_db:
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    login_host: "{{ login_host }}"
    name: all
    state: import
    target: /app/schema/backend.sql    

- name: daemon reload and restart service
  ansible.builtin.systemd_service:
    enabled: true
    state: restarted
    daemon_reload: true
    name: backend    